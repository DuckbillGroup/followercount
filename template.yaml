AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  followercount

  SAM Template that counts followers over time

Parameters:
  twooters:
    Type: String
    Default: Quinnypig

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Api:
    OpenApiVersion: "3.0.1"
  Function:
    Timeout: 3
    Tags:
      project: followercount
    Environment:
      Variables:
        BEARER_TOKEN: '{{resolve:ssm:TWITTER_BEARER_TOKEN:1}}'
        TWITTER_ACCOUNTS: !Ref twooters
Resources:
  PopularFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: mr_popular/
      Handler: mrpopular.handler
      Runtime: python3.8
      Policies:
        - DynamoDBWritePolicy:
            TableName: FollowerCount
      Tags:
        project: followercount
      Events:
        ScheduledEvent:
          Type: Schedule
          Properties:
            Schedule: rate(1 hour)
            Description: Once an hour
            Enabled: True
  FollowerCount:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: EpochTime
          AttributeType: "N"
        - AttributeName: twitter_handle
          AttributeType: "S"
      KeySchema:
        - AttributeName: "EpochTime"
          KeyType: "HASH"
        - AttributeName: "twitter_handle"
          KeyType: "RANGE"
      ProvisionedThroughput: 
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
      TableName: FollowerCount

  RestAPIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: RestAPIPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                - dynamodb:Query
                Resource:
                - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${FollowerCount}

  RestAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: './openapi.yaml'

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api

  PopularFunction:
    Description: "Popular Lambda Function ARN"
    Value: !GetAtt PopularFunction.Arn

  PopularFunctionIamRole:
    Description: "Implicit IAM Role created for Popular function"
    Value: !GetAtt PopularFunctionRole.Arn

  ApiRoot:
    Value: !Sub https://${RestAPI}.execute-api.${AWS::Region}.amazonaws.com/Prod
